#!/bin/bash

SOURCES=/etc/apt/sources.list
UPGRADE_FILE=/var/lib/zentyal/.upgrade-finished
TMPFILE=/tmp/packages-list
QALIST=/etc/apt/sources.list.d/zentyal-qa.list
ZENTYAL_HOME=/var/lib/zentyal/
CERT_DIR=/var/lib/zentyal/conf/ssl

CURCODE='bionic'
DSTCODE='focal'

CURMAJORV=`dpkg -l|grep zentyal-core | awk '{print $3}' | cut -d'.' -f1`
CURMINORV=`dpkg -l|grep zentyal-core | awk '{print $3}' | cut -d'.' -f2`
#TODO: Change use "curl -s -k" instead of wget
DESTMAJOR=`wget --quiet -O - http://update.zentyal.org/update-from-${CURMAJORV}.${CURMINORV}.txt|cut -d'.' -f1`
DESTMINOR=`wget --quiet -O - http://update.zentyal.org/update-from-${CURMAJORV}.${CURMINORV}.txt|cut -d'.' -f2`
CURRV="${CURMAJORV}.${CURMINORV}"
DESTV="${DESTMAJOR}.${DESTMINOR}"
KEYURL="keys.zentyal.org/zentyal-${DESTV}-packages.asc"

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'
BOLD=$(tput bold)
NORM=$(tput sgr0)

function checkZentyalVersion
{
    echo -e "${GREEN} - Checking the zentyal-core version...${NC}"
    if [ $CURMAJORV -gt $DESTMAJOR ];
    then
        echo -e "${RED}${BOLD} Your system is up to date${NC}${NORM}"
        exit 130
    elif  [ $DESTMAJOR -gt $CURMAJORV ]
    then
            echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
    else
        if [ $CURMINORV -gt $DESTMINOR ] || [ $CURMINORV -eq $DESTMINOR ];
        then
            echo -e "${RED}${BOLD} Your system is up to date${NC}${NORM}"
            exit 130
        fi
    fi
    echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
}

function checkDiskSpace
{
    echo -e "${GREEN} - Checking for available disk space...${NC}"
    if [ $(df /boot | tail -1 | awk '{print $4}') -lt 51200 ];
    then
        echo "${RED}  Upgrade cannot be performed due to low disk space (less than 50MB available on /boot)${NC}"
        exit 130
    fi

    for i in / /var
    do
        if [ `df $i | tail -1 | awk '{print $4}'` -lt 358400 ];
        then
            echo -e "${RED}  Upgrade cannot be performed due to low disk space (less than 350MB available on $i)${NC}"
            exit 130
        fi
    done
    echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
}

function checkPendingPackages
{
    IFS=';' read updates security_updates < <(/usr/lib/update-notifier/apt-check 2>&1)
    if (( $updates == 0 )) && (( $security_updates == 0 )); then
        echo "No updates are available"
    else
        echo -e "${RED}  There are $updates updates available and $security_updates security updates available, please, install them before to upgrade your system${NC}"
        exit 130
    fi
}

function checkUbuntuReposotories
{
    echo -e "${GREEN} - Checking and setting ubuntu repositories...${NC}"
    if ! grep -v "^#" $SOURCES | grep -q "ubuntu.com"
    then
        echo "deb http://archive.ubuntu.com/ubuntu/ $DSTCODE main restricted universe multiverse" >> $SOURCES
        echo "deb http://archive.ubuntu.com/ubuntu/ $DSTCODE-updates main restricted universe multiverse" >> $SOURCES
        echo "deb http://security.ubuntu.com/ubuntu/ $DSTCODE-security main restricted universe multiverse" >> $SOURCES
    fi
    echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
}

function repairPkgs
{
    counter=0;
    pkgs=$(dpkg -l | grep -vE '^(ii|rc|hi)'| awk '{ if ( NR > 5  ) { print $2} }')
    while [[ $pkgs ]] && [[ $counter < 10 ]];
    do
        for i in $pkgs
        do
            echo 'Working on '.$i
            dpkg --configure $i
            sleep 1
        done
        ((counter++))
    done;
}

function checkBrokenPackages
{
    echo -e "${GREEN} - Installed Zentyal packages:${NC}"
    dpkg -l | grep 'zentyal-'
    echo;
    echo -e "${GREEN} - Checking for broken packages...${NC}"
    touch $TMPFILE && dpkg -l | awk '{ if ( NR > 5  ) { print } }' > $TMPFILE
    if grep -vE '^(ii|rc)' $TMPFILE
    then
        if [[ $(systemctl is-active redis) != 'active' ]]
        then
            systemctl restart redis
        fi
        echo -e "${RED}  You have broken packages, trying to execute dpkg --configure -a before to continue${NC}"
        dpkg --configure -a
        repairPkgs
    fi
    rm -f $TMPFILE
    echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
}

function checkGPG
{
    echo -e "${GREEN} - Looking for gnupg package...${NC}"
    dpkg -s gnupg &> /dev/null
    if [ $? -eq 0 ];
    then
        echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
    else
        echo -e "${RED}  Package is NOT installed! Trying to install it...${NC}";echo
        apt-get install gnupg -y
    fi
}

function checkZentyalMySQL
{
    echo -e "${GREEN} - Checking Zentyal's MySQL db...${NC}"
    mysqlcheck --databases zentyal
    echo;
}

function cleanPreviousUpgrade
{
    echo -e "${GREEN} - Cleaning $UPGRADE_FILE if exists...${NC}"
    if [ -f $UPGRADE_FILE ]
    then
        rm -f $UPGRADE_FILE
    fi
    echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
}

function prepareZentyalRepositories
{
    wget -qO - $KEYURL | sudo apt-key add -

    if [ -f '/etc/apt/sources.list.d/zentyal-archive.list' ];
    then
        rm -f /etc/apt/sources.list.d/zentyal-archive.list
    fi

    if [  -f '/var/lib/zentyal/.commercial-edition' ] && [ -s '/var/lib/zentyal/.license' ];
    then
        sed -i "s/zentyal-qa ${CURRV}/zentyal-qa ${DESTV}/g" $QALIST
    else
        sed -ri "/zentyal(.)${CURRV}/d" /etc/apt/sources.list
        echo "deb http://packages.zentyal.org/zentyal ${DESTV} main extra" > /etc/apt/sources.list.d/zentyal-packages.list
    fi

    ## Adding Suricata repositorio for zentyal-ips module
    if ! grep -qR 'http://ppa.launchpad.net/oisf/suricata-stable/ubuntu' /etc/apt/sources.list*;
    then
        echo "deb http://ppa.launchpad.net/oisf/suricata-stable/ubuntu ${DSTCODE} main" >> /etc/apt/sources.list
        apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D7F87B2966EB736F
    fi

    apt-get update
}

function prepareUpgrade
{
    checkZentyalVersion
    checkDiskSpace
    checkPendingPackages
    checkUbuntuReposotories
    checkBrokenPackages
    checkGPG
    checkZentyalMySQL
    cleanPreviousUpgrade

    sed -i "s/^deb-src/#deb-src/g" /etc/apt/sources.list
    sed -i "s/$CURCODE/$DSTCODE/g" /etc/apt/sources.list

    echo -e "${GREEN}${BOLD}...OK${NC}${NORM}";echo
}

function upgrade_ubuntu
{

    echo "## Updating Ubuntu packages" >> /var/log/zentyal/zentyal.log
    echo "## Updating Ubuntu packages" >> /var/log/syslog

    ## Avoiding unexpected Zentyal packages deletion
    PKG=$(dpkg -l | egrep '^ii.*(zenbuntu-|zentyal)' | awk '{print $2}')
    apt-mark hold ${PKG}

    export DEBIAN_FRONTEND=noninteractive
    apt-get update

    apt-get dist-upgrade -y -o DPkg::Options::="--force-overwrite" -o DPkg::Options::="--force-confdef"

    ## Radius workaround
    if dpkg -l | grep zentyal-radius;
    then
        mkdir /etc/freeradius/3.0/sites-enabled/
        chown freerad:freerad /etc/freeradius/3.0/sites-enabled/
        ln -s /etc/freeradius/3.0/sites-available/default /etc/freeradius/3.0/sites-enabled/
        ln -s /etc/freeradius/3.0/sites-available/inner-tunnel /etc/freeradius/3.0/sites-enabled/
    fi

    repairPkgs
}

function upgrade_zentyal
{
    echo "## Updating Zentyal packages" >> /var/log/zentyal/zentyal.log
    echo "## Updating Zentyal packages" >> /var/log/syslog

    apt-mark unhold ${PKG}

    apt-get dist-upgrade -y -o DPkg::Options::="--force-overwrite" -o DPkg::Options::="--force-confdef"
    checkBrokenPackages
}

function postUpgradeProcedure
{
    # Checking and regeneratin webadmin cert
    if [ `redis-cli get ca/conf/Certificates/keys/crt1 | jq .enable` -eq 0 ];
    then
        echo -e "${GREEN} - Regenerating Nginx cert...${NC}"
        rm -rf $CERT_DIR
        /usr/share/zentyal/create-certificate $ZENTYAL_HOME/conf/ssl `hostname --fqdn`
    fi

    # Checking and regeneratin FTP cert
    if [[ -f /etc/vsftpd/ssl/ssl.pem ]] && openssl x509 -text -noout -in /etc/vsftpd/ssl/ssl.pem  | grep -q 'Issuer: CN = eBox Server';
    then
        echo -e "${GREEN} - Regenerating FTP cert...${NC}"
        rm -f /etc/vsftpd/ssl/ssl.*
        /usr/share/zentyal/create-certificate /etc/vsftpd/ssl/ `hostname --fqdn`
    fi

    # Creating symlink for the new iptables daemon
    ln -s /usr/sbin/iptables /sbin/iptables

    # Creating symlink for bash shell
    ln -s /bin/bash /usr/bin/bash

    # Adding bash shell to the shells configuration file
    if ! grep -q '/usr/bin/bash' /etc/shells
    then
        echo '/usr/bin/bash' >> /etc/shells
        chsh -s /usr/bin/bash
    fi

    # Purge all no longer needed running services
    dpkg -l | grep 'zentyal-' | cut -d' ' -f3 | xargs apt-mark manual
    apt-get autoremove --purge -y -o DPkg::Options::="--force-confdef"
    dpkg --configure -a --force-confdef
    apt-get -f install -y -o DPkg::Options::="--force-confdef"
    checkBrokenPackages

    sleep 2
    apt-get clean

    echo; echo -e "${GREEN}${BOLD}*** Zentyal upgrade finished! Please restart your server now.${NC}${NORM}"

    sleep 2
    pkill -f upgrade-log-server
}

function forceZentyalLXDM
{
    systemctl disable lxdm
    systemctl enable zentyal.lxdm
}

function finishUpgrade
{
    if dpkg --configure -a --force-confdef
    then
        forceZentyalLXDM
        postUpgradeProcedure
    else
        echo; echo -e "${RED}${BOLD}*** Zentyal upgrade failed. Full log at /var/log/zentyal/upgrade.log.${NC}${NORM}"
    fi

    sleep 2
    apt-get clean

    touch $UPGRADE_FILE
    echo "## Update finished" >> /var/log/zentyal/zentyal.log
    echo "## Update finished" >> /var/log/syslog
}

echo; echo -e "${YELLOW}*** Preparing your system for the upgrade...${NC}"; echo
prepareUpgrade

echo; echo -e "${YELLOW}*** Preparing for upgrade to Zentyal ${DESTV}...${NC}"; echo
prepareZentyalRepositories

echo; echo -e "${YELLOW}*** Upgrading Ubuntu from ${CURCODE} to ${DSTCODE}...${NC}"; echo
upgrade_ubuntu

echo; echo -e "${YELLOW}*** Upgrading Zentyal from ${CURMAJORV}.${CURMINORV} to ${DESTMAJOR}.${DESTMINOR}...${NC}"; echo
upgrade_zentyal

echo; echo -e "${YELLOW}*** Finishing the upgrade...${NC}"; echo
finishUpgrade
